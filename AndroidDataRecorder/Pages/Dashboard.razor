@page "/Dashboard"
@using System.Threading;
@using System.Collections
@inject IToastService toastService;
@page "/"


<header>
    <h1 class="text-center" style="color: white">Dashboard</h1>
</header>

<br>

<main class="justify-content-center">
    <section id="device_information">
        <div class="row">
            <div class="col-md">
                <div class="card text-center side-cards">
                    <div class="card-header" style="color: white">
                        Overview
                    </div>
                    <div class="card-body text-left">
                        <div class="row">
                            <div class="col-md">
                                <p class="card-text">Current Device: </p>
                                <p class="card-text">Connection: </p>
                                <p class="card-text">IP-Address: </p>
                            </div>
                            <div class="col-md text-left">
                                <p class="card-text">AndroidPhone123456 </p>
                                <p class="card-text">USB/Ethernet</p>
                                <p class="card-text">123.123.432.45</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-muted">
                        <p style="color: #1e7e34">Connected</p>
                    </div>
                </div>
            </div>
            <div class="col-md">
                <div class="card text-center side-cards">
                    <div class="card-header" style="color: white">
                        Functions
                    </div>
                    <div class="card-body text-left">
                        <div class="row">
                            <div class="col-md">
                                <p><btn class="btn @LogBtnColor " @onclick="Logbtnclick"> @LogBtnValue</btn></p>
                                <p><button class="btn btn-success" @onclick="getMarkerTime">Set Marker</button></p>
                            </div>
                            <div class="col-md text-left">
                                <div style="visibility: @ProcessTextValue">
                                    <div class="spinner-border text-danger" role="status"></div>
                                    <span> Logging in Progress...</span>
                                </div>
                                
                                <br>
                                
                                <p class="card-text">@CurrDateTime</p>
             
                            </div>
                        </div>
                        
                    </div>
                    <div class="card-footer text-muted">
                        <p style="color: #1e7e34">Connected</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <br>

    <section id="log_table">
        <div class="card text-center side-cards">
            <div class="card-header" style="color: white">
                System Status
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3 text-left">
                        <p style="font-size: x-large">CPU: </p>
                        <p style="font-size: x-large">Memory: </p>
                        <p style="font-size: x-large">Battery: </p>
                    </div>
                    <div class="col-md-7">
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-danger" role="progressbar" style="width:@cpuPercentage" aria-valuenow="12" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <br>
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @memoryUsage" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <br>
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @batterylevel" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <p style="font-size: x-large">@cpuPercentage</p>
                        <p style="font-size: x-large">@memoryUsage</p>
                        <p style="font-size: x-large">@batterylevel</p>
                    </div>
                </div>
            </div>
            <div class="card-footer text-muted">
                <p style="color: #1e7e34">Systems Stats: Check</p>
            </div>
        </div>
    </section>

</main>


@code {
    
    ///
    ///Time Display
    /// 
    private Timer _timer;
    public string CurrDateTime { get; set; }
    private string markerTime;
    
    ArrayList list = new ArrayList();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _timer = new Timer(DateTimeCallback, null, TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(1));
        }
    }

    private async void DateTimeCallback(object state)
    {
        CurrDateTime = DateTimeOffset.UtcNow.ToLocalTime().ToString("dd MMMM yyyy hh:mm:ss tt");
        await InvokeAsync((StateHasChanged));
    }

    public void Dispose()
    {
        _timer?.Dispose();
    }
    
    ///<summary>
    /// Gets the time the marker was set and saves it in a list
    /// </summary>
    public void getMarkerTime()
    {
        markerTime = CurrDateTime;
        list.Add(markerTime);
        toastService.ShowSuccess("Marker set at " + CurrDateTime, "Success");
    }
    
    ///
    ///Log Button Toggle
    /// 
    private bool _togglebtn;
    private bool _togglebtncolor;
    
    private bool _toggleprocesstxt;
    
    private string LogBtnValue => _togglebtn ? "Stop Logging" : "Start Logging";
    private string ProcessTextValue => _toggleprocesstxt ? "visible" : "hidden";
    private string LogBtnColor => _togglebtncolor ? "btn-danger" : "btn-success";
    
    void Logbtnclick()
    {
        _togglebtn = !_togglebtn;
        _togglebtncolor = !_togglebtncolor;
        _toggleprocesstxt = !_toggleprocesstxt;
    }
    

    
    
    string cpuPercentage = "98%";
    string memoryUsage = "54%";
    string batterylevel = "86%";



    string increaseProgress()
    {
        int counter = 0;
        for (int i = 0; i < 90; i++)
        {
            counter++;
        }

        return counter + "%";
    }



}