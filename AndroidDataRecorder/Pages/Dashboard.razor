@page "/Dashboard"
@using System.Threading;
@using AndroidDataRecorder.Misc
@using System.Globalization

@inject IToastService ToastService;
@page "/"


<header>
    <h1 class="text-center" style="color: white">Dashboard</h1>
</header>

<br>

<main class="justify-content-center">
    <section id="device_information">
        <div class="row">
            <div class="col-md">
                <div class="card text-center side-cards">
                    <div class="card-header" style="color: white">
                        Overview
                    </div>
                    <div class="card-body text-left">
                        <div class="row">
                            <div class="col-md">
                                <p class="card-text">Current Device: </p>
                                <p class="card-text">Connection: </p>
                                <p class="card-text">IP-Address: </p>
                            </div>
                            <div class="col-md text-left">
                                <p class="card-text">@MarkerList.GetDeviceName() </p>
                                <p class="card-text">@MarkerList.DeviceConnectionType()</p>
                                <p class="card-text">@MarkerList.IpAddress()</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-muted">
                        <p>@MarkerList.DeviceStatus()</p>
                    </div>
                </div>
            </div>
            <div class="col-md">
                <div class="card text-center side-cards">
                    <div class="card-header" style="color: white">
                        Functions
                    </div>
                    <div class="card-body text-left">
                        <div class="row">
                            <div class="col-md">
                                <p>
                                    <btn class="btn @LogBtnColor " @onclick="LoggingBtnClick"> @LogBtnValue</btn>
                                </p>
                            </div>
                            <div class="col-md text-left">
                                <div style="visibility: @ProcessTextValue">
                                    <div class="spinner-border text-danger" role="status"></div>
                                    <span> Logging in Progress...</span>
                                </div>
                            </div>
                        </div>
                        <div class="row col">
                            <textarea id="marker_message" type="text" class="form-control" name="marker_message" placeholder="Marker Message..." rows="2" @bind="_markerSetMessage"></textarea>
                        </div>
                        <div class="row col">
                            <p class="card-text">@CurrDateTime</p>
                        </div>
                        <div class="row col justify-content-center">
                            <p>
                                <button class="btn btn-success" @onclick="GetMarkerTime">Set Marker</button>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <br>

    <section id="device_information">
        <div class="row">
            <div class="col-md">
                <div class="card text-center side-cards">
                    <div class="card-header" style="color: white">
                        System Status
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3 text-left">
                                <p>CPU: </p>
                                <p>Memory: </p>
                                <p>Battery: </p>
                            </div>
                            <div class="col-md-7">
                                <div class="progress">
                                    <div class="progress-bar progress-bar-striped progress-bar-animated bg-danger" role="progressbar" style="width:@cpuPercentage" aria-valuenow="12" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <br>
                                <div class="progress">
                                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @memoryUsage" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                <br>
                                <div class="progress">
                                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: @batterylevel" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <p>@cpuPercentage</p>
                                <p>@memoryUsage</p>
                                <p>@batterylevel</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="card-footer text-muted">
                        <p style="color: #1e7e34">Systems Stats: Check</p>
                    </div>
                </div>
            </div>
            <div class="col-md">
                <div class="card side-cards">
                    <div class="row">
                        <div class="col">
                            <div class="table-responsive" >
                                <table class="table table-hover" style="width: 100%; height:  100%; table-layout: auto">
                                    <thead class="table-custom-head">
                                    <tr>
                                        <th scope="col">Process</th>
                                        <th scope="col">CPU</th>
                                        <th scope="col">Memory</th>
                                    </tr>
                                    </thead>
                                    <tbody style="font-size: small">
                                    <tr>
                                        <th>prcss</th>
                                        <td>42%</td>
                                        <td>12%</td>

                                    </tr>
                                    <tr>
                                        <th>prcss</th>
                                        <td>42%</td>
                                        <td>12%</td>


                                    </tr>
                                    <tr>
                                        <th>prcss</th>
                                        <td>42%</td>
                                        <td>12%</td>

                                    </tr>
                                    <tr>
                                        <th>prcss</th>
                                        <td>42%</td>
                                        <td>12%</td>

                                    </tr>
                                    <tr>
                                        <th>prcss</th>
                                        <td>42%</td>
                                        <td>12%</td>
                                    </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <br>

    <section id="testsection">
        <div class="card">
            <div class="card-header">
                <h3 class="text-center" style="color: white">Marker</h3>
            </div>
            <div class="card-body">
                <div style="height: 250px" class="table-wrapper-scroll-y scroll-bar">
                    <table class="table table-bordered table-striped">
                        <thead>
                        <tr>
                            <th>Time</th>
                            <th>Message</th>
                        </tr>
                        </thead>
                        <tbody>
                        @*@foreach (var marker in Enumerable.Reverse(_markerList.Markers))*@
                        @foreach (var marker in Enumerable.Reverse(MarkerList.Markers))
                        {
                            <tr>
                                <td style="width: 30%">@marker.timeStamp</td>
                                <td>@marker.message</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>

</main>


@code {
    
    
    
    /*
     * Current time and date
     */
    DateTime CurrDateTime { get; set; }
    

    /*
     * Database 
     */
    readonly AndroidDataRecorder.Database.Database _data = new AndroidDataRecorder.Database.Database();

    /*
     * Text in marker text box
     */
    private string _markerSetMessage;

    /*
     * List of marker
     */
    private readonly MarkerList _markerList = new MarkerList();

    /*
     * System stats (temporarily) 
     */
    string cpuPercentage = "98%";
    string memoryUsage = "54%";
    string batterylevel = "86%";

    /*
     * Set callback for timer and fill marker list on page load
     */

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // ReSharper disable once ObjectCreationAsStatement
        new Timer(DateTimeCallback, null, TimeSpan.FromSeconds(1), TimeSpan.FromSeconds(1));
    }

    /*
     * Set CurrDateTime to current time
     */

    private async void DateTimeCallback(object state)
    {
        //CurrDateTime = DateTimeOffset.UtcNow.ToLocalTime().ToString("yyyy-mm-dd hh:mm:ss.fff");
        CurrDateTime = DateTime.Now;
        await InvokeAsync((StateHasChanged));
    }

    /*
     * Gets the time the marker was set and saves it in a list
     */

    private void GetMarkerTime()
    {
        if (ValidateMarker())
        {
            _data.InsertValuesInTableMarker(MarkerList.GetDeviceSerial() ,MarkerList.GetDeviceName(), CurrDateTime, _markerSetMessage);

            ToastService.ShowSuccess("Message: " + _markerSetMessage, CurrDateTime.ToString());
            _markerSetMessage = string.Empty;
            _markerList.Update();
        }
        else
        {
            ToastService.ShowError("Please put in a message and select a device", "Error");
        }
    }

    private bool ValidateMarker()
    {
        if (!string.IsNullOrWhiteSpace(_markerSetMessage) && MarkerList.ActiveDeviceData is not null)
        {
            return true;
        }
        return false;
    }


    /*
     * Logging button
     */
    private bool _toggleLoggingBtn;

    /*
     * Adjusting CSS for logging
     */
    private string LogBtnValue => _toggleLoggingBtn ? "Stop Logging" : "Start Logging";
    private string ProcessTextValue => _toggleLoggingBtn ? "visible" : "hidden";
    private string LogBtnColor => _toggleLoggingBtn ? "btn-danger" : "btn-success";

    /*
     * Toggle logging bool
     */

    void LoggingBtnClick()
    {
        _toggleLoggingBtn = !_toggleLoggingBtn;
    }

}