@page "/logger"
@using AndroidDataRecorder.Misc
@using AndroidDataRecorder.Backend
@using AndroidDataRecorder.Database

<header>
    <h1 class="text-center" style="color: white">Logger</h1>
    <br>
</header>

<section id="application">
    <div class="card">
        <div class="card-header text-center" style="color: white">
            Filter
        </div>
        <div class="card-body">
            <EditForm Model="@filtering" OnSubmit="@Submit">
                <div class="row">
                    <div class="col">
                        Marker:
                        <InputSelect class="form-control" @bind-Value="@filtering.timeStamp">
                            @foreach (var marker in Enumerable.Reverse(MarkerList.Markers))
                            {
                                <option>@marker.timeStamp</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col">
                        Loglevel:
                        <InputSelect class="form-control" @bind-Value="@filtering.Level">
                            @foreach (var loglevel in loglevel)
                            {
                                <option>@loglevel</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col text-center justify-content-center">
                        <button type="submit" class="btn btn-primary">Apply filter</button>
                    </div>

                </div>
            </EditForm>

        </div>
    </div>
</section>

<br>

<section id="Logger_table">
          <div class="card text-center">
              <div class="card-header" style="color: white">
                  Log Table
              </div>
              
              <div class="card-body">
                  <div class="table-wrapper-scroll-y my-custom-scrollbar">
                      <table class="table table-bordered table-striped mb-0">
                      <thead>
                        <tr>
                          <th scope="col">Device Name</th>
                          <th scope="col">System Timestamp</th>
                          <th scope="col">Device Timestamp</th>
                          <th scope="col">PID</th>
                          <th scope="col">TID</th>
                          <th scope="col">Loglevel</th>
                          <th scope="col">App</th>
                          <th scope="col">Message</th>
                        </tr>
                      </thead>
                      <tbody>
                      
                      @foreach (var log in Enumerable.Reverse(Logs))
                      {
                          <tr>
                              <td>@log.devicename</td>
                              <td>@log.timeStamp</td>
                              <td>@log.DeviceTimestamp</td>
                              <td>@log.Pid</td>
                              <td>@log.Tid</td>
                              <td>@log.LogLevel</td>
                              <td>@log.App</td>
                              <td>@log.message</td>
                          </tr>
                      }
                      </tbody>
                    </table>
                  </div>
              </div>
              <div class="card-footer text-muted">
                  <p style="color: #1e7e34"></p>
              </div>
          </div>
</section>


@code {
    
    /*
     * Temp List for listed applications
     */
    List<string> list = new List<string>{ "App 1", "App 2","App 3","App 4","App 5","App 6","App 7", };
    
    /*
     * List with the Loglevels for the dropdown button
     */
    List<string> loglevel = new List<string> {"V", "D", "I", "W", "E", "F", "S"};

    /*
     * List of attached devices
     */
    static List<SharpAdbClient.DeviceData> _tempDeviceList;
    
    /*
     * Set device list
     */
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _tempDeviceList = AdbServer.GetConnectedDevices();
    }
    
    /*
     * List for LogEntries
     */
    public static List<LogEntry> Logs = new List<LogEntry>();
    
    /*
     * Database instance
     */
    private Database data = new Database();

    
    /*
     *instance of Filtering class 
     */
    Filtering filtering = new Filtering();
    
    
    
    
    
    /*
     * OnClick for the filter button
     */
    public void Submit()
    {
        Console.WriteLine(filtering.timeStamp );
        Console.WriteLine(filtering.Level);
        Console.WriteLine(filtering.App);
        Console.WriteLine(filtering.timeStamp.GetType());

        Logs = data.LogListFilterByTimestamp(filtering.timeStamp.Subtract(new TimeSpan(0,0,30)), filtering.timeStamp);
        
        Console.WriteLine("hallo");
        
    }
    
    /*
     * Model Class?
     */
    public class Filtering
    {
        public DateTime timeStamp { get; set; }

        public string App { get; set; }
        public string Level { get; set; }


    }

}